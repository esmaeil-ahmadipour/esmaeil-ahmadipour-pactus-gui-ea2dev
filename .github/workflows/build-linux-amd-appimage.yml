name: Build & Release Linux (AMD64/AppImage)

on:
  push:
    tags:
      - 'v*'

env:
  FLUTTER_VERSION: 3.32.0
  TARGET_OS: linux # example `linux` , `windows` , `macos`
  ARCH: amd64 # example `arm64` , `amd64`
  FILE_TYPE: AppImage # example `AppImage` , `zip` , `dmg`

jobs:
  build-and-release:
    runs-on: ubuntu-22.04 # example `ubuntu-22.04-arm` , `ubuntu-22.04` , `ubuntu-latest` , `macos-latest` , `windows-latest`
    outputs:
      tag_name: ${{ steps.set-outputs.outputs.tag_name }}
      download_link: ${{ steps.set-outputs.outputs.download_link }}

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Flutter ${{ env.FLUTTER_VERSION }}
        run: |
          git clone https://github.com/flutter/flutter.git --branch ${{ env.FLUTTER_VERSION }} --depth 1
          echo "$PWD/flutter/bin" >> $GITHUB_PATH
          export PATH="$PWD/flutter/bin:$PATH"

      - name: Configure Flutter
        run: |
          flutter doctor -v
          flutter config --enable-${{ env.TARGET_OS }}-desktop
          flutter precache --${{ env.TARGET_OS }}

      - name: Run build and release script
        run: chmod +x .github/scripts/build_and_package_${{ env.TARGET_OS }}_${{ env.ARCH }}_${{ env.FILE_TYPE }}.sh && .github/scripts/build_and_package_${{ env.TARGET_OS }}_${{ env.ARCH }}_${{ env.FILE_TYPE }}.sh ${{ github.ref_name }}

      - name: Upload build file to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          overwrite: true
          draft: true
          prerelease: false
          file: "artifacts/PactusGUI-${{ github.ref_name }}-${{ env.TARGET_OS }}-${{ env.ARCH }}.${{ env.FILE_TYPE }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save artifact to centralized folder
        run: |
          mkdir -p ./all-artifacts/${{ env.TARGET_OS }}
          cp "artifacts/PactusGUI-${{ github.ref_name }}-${{ env.TARGET_OS }}-${{ env.ARCH }}.${{ env.FILE_TYPE }}" ./all-artifacts/${{ env.TARGET_OS }}/

      - name: List all files and folders in artifacts
        run: |
          echo "Files in folder:"
          ls -R ./
          echo "Files in artifacts folder:"
          ls -R ./artifacts
          echo "Files in all-artifacts folder:"
          ls -R ./all-artifacts

      - name: Generate release download links
        run: |
          TAG=${{ github.ref_name }}
          FILE=PactusGUI-${TAG}-${{ env.TARGET_OS }}-${{ env.ARCH }}.${{ env.FILE_TYPE }}
          DOWNLOAD_URL="https://github.com/${{ github.repository }}/releases/download/${TAG}/${FILE}"
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${TAG}"
          echo "Download URL: $DOWNLOAD_URL"
          echo "Release URL: $RELEASE_URL"
