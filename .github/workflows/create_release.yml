name: Create Final Release
on:
  workflow_run:
    workflows:
      - "Build & Release Linux (AMD64/Zip)"
    types:
      - completed
jobs:
  aggregate-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download All Draft Assets
        run: |
          # Install GitHub CLI
          type -p gh >/dev/null || curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update && sudo apt install gh -y
          
          # Download assets from all draft releases
          mkdir -p aggregated-assets
          
          # Get list of draft releases for this version
          DRAFTS=$(gh release list --limit 50 --json tagName,isDraft | jq -r '.[] | select(.tagName | startswith("${{ github.ref_name }}-draft-")) | .tagName')
          
          for draft in $DRAFTS; do
            echo "Downloading assets from $draft"
            gh release download $draft --dir aggregated-assets
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List Downloaded Files
        run: ls -la aggregated-assets/

      - name: Create Final Release with All Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            Multi-platform release ${{ github.ref_name }}
            
            Includes:
            - Linux AMD64
            - Linux ARM64  
            - Windows
            - macOS
          files: aggregated-assets/*
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup Draft Releases
        run: |
          # Delete all draft releases for this version
          DRAFTS=$(gh release list --limit 50 --json tagName,isDraft | jq -r '.[] | select(.tagName | startswith("${{ github.ref_name }}-draft-")) | .tagName')
          
          for draft in $DRAFTS; do
            echo "Deleting draft release $draft"
            gh release delete $draft --yes
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}